{"ast":null,"code":"import _defineProperty from \"/Users/tylerkidd/Desktop/INSIDER TRAVLER/insider-travel/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/tylerkidd/Desktop/INSIDER TRAVLER/insider-travel/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tylerkidd/Desktop/INSIDER TRAVLER/insider-travel/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/tylerkidd/Desktop/INSIDER TRAVLER/insider-travel/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tylerkidd/Desktop/INSIDER TRAVLER/insider-travel/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/tylerkidd/Desktop/INSIDER TRAVLER/insider-travel/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/tylerkidd/Desktop/INSIDER TRAVLER/insider-travel/client/src/pages/Feedbacks.js\";\nimport React, { Component } from \"react\"; // import DeleteBtn from \"../components/DeleteBtn\";\n\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\n\nvar Feedbacks =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Feedbacks, _Component);\n\n  function Feedbacks() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Feedbacks);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Feedbacks)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      feedbacks: [],\n      name: \"\",\n      city: \"\",\n      info: \"\"\n    };\n\n    _this.loadFeedbacks = function () {\n      API.getFeedbacks().then(function (res) {\n        return _this.setState({\n          feedbacks: res.data,\n          name: \"\",\n          city: \"\",\n          info: \"\"\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.handleInputChange = function (event) {\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.handleFormSubmit = function (event) {\n      event.preventDefault();\n\n      if (_this.state.name && _this.state.city) {\n        API.saveFeedback({\n          // _id:this.state._id,\n          name: _this.state.name,\n          city: _this.state.city,\n          info: _this.state.info\n        }).then(function (res) {\n          return _this.loadFeedbacks();\n        }).catch(function (err) {\n          return console.log(err);\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Feedbacks, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadFeedbacks();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Container, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(Col, {\n        size: \"md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"What Feedback Do You Have?\")), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(Input, {\n        value: this.state.name,\n        onChange: this.handleInputChange,\n        name: \"name\",\n        placeholder: \"What is your name? (Required)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), React.createElement(Input, {\n        value: this.state.city,\n        onChange: this.handleInputChange,\n        name: \"city\",\n        placeholder: \"What city are you from? (Required)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }), React.createElement(TextArea, {\n        value: this.state.info,\n        onChange: this.handleInputChange,\n        name: \"info\",\n        placeholder: \"What do you think about us? (Required)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), React.createElement(FormBtn, {\n        disabled: !(this.state.city && this.state.name && this.state.info),\n        onClick: this.handleFormSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"Submit\"))), React.createElement(Col, {\n        size: \"md-6 sm-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"What Others Think!\")), this.state.feedbacks.length ? React.createElement(List, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, this.state.feedbacks.map(function (feedback) {\n        return React.createElement(ListItem, {\n          key: feedback._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/feedbacks/\" + feedback._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }, React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }, feedback.name, \" from \", feedback.city)));\n      })) : React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"No Results to Display\"))));\n    }\n  }]);\n\n  return Feedbacks;\n}(Component);\n\nexport default Feedbacks;","map":{"version":3,"sources":["/Users/tylerkidd/Desktop/INSIDER TRAVLER/insider-travel/client/src/pages/Feedbacks.js"],"names":["React","Component","Jumbotron","API","Link","Col","Row","Container","List","ListItem","Input","TextArea","FormBtn","Feedbacks","state","feedbacks","name","city","info","loadFeedbacks","getFeedbacks","then","res","setState","data","catch","err","console","log","handleInputChange","event","target","value","handleFormSubmit","preventDefault","saveFeedback","length","map","feedback","_id"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n// import DeleteBtn from \"../components/DeleteBtn\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\n\nclass Feedbacks extends Component {\n  state = {\n    feedbacks: [],\n    name: \"\",\n    city: \"\",\n    info: \"\"\n  };\n\n\n  componentDidMount() {\n    this.loadFeedbacks();\n  }\n\n \n\n  loadFeedbacks = () => {\n    API.getFeedbacks()\n    \n      .then(res =>\n        this.setState({ feedbacks: res.data,  name: \"\", city: \"\", info: \"\" })\n     ) \n      .catch(err => console.log(err));\n  };\n  \n  // deleteFeedback = id => {\n  //   API.deleteFeedback(id)\n  //     .then(res => this.loadFeedbacks())\n  //     .catch(err => console.log(err));\n  // };\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    if (this.state.name && this.state.city) {\n      API.saveFeedback({\n        // _id:this.state._id,\n        name: this.state.name,\n        city: this.state.city,\n        info: this.state.info\n      })\n        .then(res => this.loadFeedbacks())\n        .catch(err => console.log(err));\n    }\n  };\n\n  render() {\n    return (\n      <Container fluid>\n        <Row>\n          <Col size=\"md-6\">\n            <Jumbotron>\n              <h1>What Feedback Do You Have?</h1>\n            </Jumbotron>\n            <form>\n              <Input\n                value={this.state.name}\n                onChange={this.handleInputChange}\n                name=\"name\"\n                placeholder=\"What is your name? (Required)\"\n              />\n              <Input\n                value={this.state.city}\n                onChange={this.handleInputChange}\n                name=\"city\"\n                placeholder=\"What city are you from? (Required)\"\n              />\n              <TextArea\n                value={this.state.info}\n                onChange={this.handleInputChange}\n                name=\"info\"\n                placeholder=\"What do you think about us? (Required)\"\n              />\n              <FormBtn\n                disabled={!(this.state.city && this.state.name && this.state.info)}\n                onClick={this.handleFormSubmit}\n              >\n                Submit \n              </FormBtn>\n\n              \n            </form>\n          </Col>\n          <Col size=\"md-6 sm-12\">\n            <Jumbotron>\n              <h1>What Others Think!</h1>\n            </Jumbotron>\n            {this.state.feedbacks.length ? (\n              <List>\n                {this.state.feedbacks.map(feedback => (\n                  <ListItem key={feedback._id}>\n                    <Link to={\"/feedbacks/\" + feedback._id}>\n                      <strong>\n                        {feedback.name} from {feedback.city}\n                      </strong>\n                    </Link>\n                    {/* <DeleteBtn onClick={() => this.deleteFeedback(feedback._id)} /> */}\n                  </ListItem>\n                ))}\n              </List>\n            ) : (\n              <h3>No Results to Display</h3>\n            )}\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default Feedbacks;\n"]},"metadata":{},"sourceType":"module"}