{"ast":null,"code":"import _classCallCheck from \"/Users/tylerkidd/Desktop/INSIDER TRAVLER/insider-travel/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tylerkidd/Desktop/INSIDER TRAVLER/insider-travel/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/tylerkidd/Desktop/INSIDER TRAVLER/insider-travel/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tylerkidd/Desktop/INSIDER TRAVLER/insider-travel/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/tylerkidd/Desktop/INSIDER TRAVLER/insider-travel/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/tylerkidd/Desktop/INSIDER TRAVLER/insider-travel/client/src/pages/Result.js\";\n// import React, { Component } from \"react\";\n// // import Jumbotron from \"../components/Jumbotron\";\n// import { Container } from \"../components/Grid\";\n// // import {  FormBtn  } from \"../components/Form\";\n// // import Script from 'react-load-script'\n// import { Badge } from \"../components/Badge\";\nimport React from \"react\"; // import ReactDOM from \"react-dom\";\n\nvar Result =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Result, _React$Component);\n\n  function Result() {\n    _classCallCheck(this, Result);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Result).apply(this, arguments));\n  }\n\n  _createClass(Result, [{\n    key: \"componentDidMount\",\n\n    /**\n     * Called after mounting the component. Triggers initial update of\n     * the iframe\n     */\n    value: function componentDidMount() {\n      this._updateIframe();\n    }\n    /**\n     * Called each time the props changes. Triggers an update of the iframe to\n     * pass the new content\n     */\n\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._updateIframe();\n    }\n    /**\n     * Updates the iframes content and inserts stylesheets.\n     * TODO: Currently stylesheets are just added for proof of concept. Implement\n     * and algorithm which updates the stylesheets properly.\n     */\n\n  }, {\n    key: \"_updateIframe\",\n    value: function _updateIframe() {\n      var iframe = this.refs.iframe;\n      var document = iframe.contentDocument;\n      var head = document.getElementsByTagName('head')[0];\n      document.body.innerHTML = this.props.content;\n      this.props.stylesheets.forEach(function (url) {\n        var ref = document.createElement('link');\n        ref.rel = 'stylesheet';\n        ref.type = 'text/css';\n        ref.href = url;\n        head.appendChild(ref);\n      });\n    }\n    /**\n     * This component renders just and iframe\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"iframe\", {\n        ref: \"iframe\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Result;\n}(React.Component);\n\nResult.propTypes = {\n  content: React.PropTypes.string.isRequired,\n  stylesheets: React.PropTypes.arrayOf(React.PropTypes.string)\n};\nexport default Result;","map":{"version":3,"sources":["/Users/tylerkidd/Desktop/INSIDER TRAVLER/insider-travel/client/src/pages/Result.js"],"names":["React","Result","_updateIframe","iframe","refs","document","contentDocument","head","getElementsByTagName","body","innerHTML","props","content","stylesheets","forEach","url","ref","createElement","rel","type","href","appendChild","Component","propTypes","PropTypes","string","isRequired","arrayOf"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;IAEMC,M;;;;;;;;;;;;;;AAOF;;;;wCAIoB;AAChB,WAAKC,aAAL;AACH;AAED;;;;;;;yCAIqB;AACjB,WAAKA,aAAL;AACH;AAED;;;;;;;;oCAKgB;AACZ,UAAMC,MAAM,GAAG,KAAKC,IAAL,CAAUD,MAAzB;AACA,UAAME,QAAQ,GAAGF,MAAM,CAACG,eAAxB;AACA,UAAMC,IAAI,GAAGF,QAAQ,CAACG,oBAAT,CAA8B,MAA9B,EAAsC,CAAtC,CAAb;AACAH,MAAAA,QAAQ,CAACI,IAAT,CAAcC,SAAd,GAA0B,KAAKC,KAAL,CAAWC,OAArC;AAEA,WAAKD,KAAL,CAAWE,WAAX,CAAuBC,OAAvB,CAA+B,UAAAC,GAAG,EAAI;AAClC,YAAMC,GAAG,GAAGX,QAAQ,CAACY,aAAT,CAAuB,MAAvB,CAAZ;AACAD,QAAAA,GAAG,CAACE,GAAJ,GAAU,YAAV;AACAF,QAAAA,GAAG,CAACG,IAAJ,GAAW,UAAX;AACAH,QAAAA,GAAG,CAACI,IAAJ,GAAWL,GAAX;AACAR,QAAAA,IAAI,CAACc,WAAL,CAAiBL,GAAjB;AACH,OAND;AAOH;AAED;;;;;;6BAGS;AACL,aAAO;AAAQ,QAAA,GAAG,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH;;;;EAhDgBhB,KAAK,CAACsB,S;;AAArBrB,M,CAEKsB,S,GAAY;AACfX,EAAAA,OAAO,EAAEZ,KAAK,CAACwB,SAAN,CAAgBC,MAAhB,CAAuBC,UADjB;AAEfb,EAAAA,WAAW,EAAEb,KAAK,CAACwB,SAAN,CAAgBG,OAAhB,CAAwB3B,KAAK,CAACwB,SAAN,CAAgBC,MAAxC;AAFE,C;AAmDvB,eAAexB,MAAf","sourcesContent":["// import React, { Component } from \"react\";\n// // import Jumbotron from \"../components/Jumbotron\";\n// import { Container } from \"../components/Grid\";\n// // import {  FormBtn  } from \"../components/Form\";\n// // import Script from 'react-load-script'\n// import { Badge } from \"../components/Badge\";\nimport React from \"react\";\n// import ReactDOM from \"react-dom\";\n\nclass Result extends React.Component {\n    \n    static propTypes = {\n        content: React.PropTypes.string.isRequired,\n        stylesheets: React.PropTypes.arrayOf(React.PropTypes.string),\n    };\n\n    /**\n     * Called after mounting the component. Triggers initial update of\n     * the iframe\n     */\n    componentDidMount() {\n        this._updateIframe();\n    }\n\n    /**\n     * Called each time the props changes. Triggers an update of the iframe to\n     * pass the new content\n     */\n    componentDidUpdate() {\n        this._updateIframe();\n    }\n\n    /**\n     * Updates the iframes content and inserts stylesheets.\n     * TODO: Currently stylesheets are just added for proof of concept. Implement\n     * and algorithm which updates the stylesheets properly.\n     */\n    _updateIframe() {\n        const iframe = this.refs.iframe;\n        const document = iframe.contentDocument;\n        const head = document.getElementsByTagName('head')[0];\n        document.body.innerHTML = this.props.content;\n        \n        this.props.stylesheets.forEach(url => {\n            const ref = document.createElement('link');\n            ref.rel = 'stylesheet';\n            ref.type = 'text/css';\n            ref.href = url;\n            head.appendChild(ref);\n        });\n    }\n\n    /**\n     * This component renders just and iframe\n     */\n    render() {\n        return <iframe ref=\"iframe\"/>\n    }\n}\n\n\n\nexport default Result;\n"]},"metadata":{},"sourceType":"module"}